// Code generated by powell_test.go.tmpl. DO NOT EDIT.

package float

import (
	math64 "math"

	math32 "github.com/chewxy/math32"
)

func ExamplePowellMinimizer32() {

	square := func(x float32) float32 {
		return x * x
	}
	pm := NewPowellMinimizer32()
	//pm.Callback = func(x []float32) { fmt.Printf("%.5g\n", x) }
	//pm.Logger = log.New(os.Stdout, "", 0)

	print(pm.Minimize(
		func(x []float32) float32 { return math32.Log(square(x[0]-2) + square(x[1]-3) + 4) },
		[]float32{10, 20},
	))

	// _Output:
	// [1.9998 3.0111]
	// [1.9949 3.0034]

}

func ExamplePowellMinimizer64() {

	square := func(x float64) float64 {
		return x * x
	}
	pm := NewPowellMinimizer64()
	//pm.Callback = func(x []float64) { fmt.Printf("%.5g\n", x) }
	//pm.Logger = log.New(os.Stdout, "", 0)

	print(pm.Minimize(
		func(x []float64) float64 { return math64.Log(square(x[0]-2) + square(x[1]-3) + 4) },
		[]float64{10, 20},
	))

	// _Output:
	// [1.9998 3.0111]
	// [1.9949 3.0034]

}
